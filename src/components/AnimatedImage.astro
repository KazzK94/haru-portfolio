---
interface Props {
  src: string;
  alt: string;
  className?: string;
}

const { src, alt, className = "" } = Astro.props;
---

<div
  class=`h-full group relative overflow-hidden rounded-xl bg-gray-100 
  shadow-sm hover:shadow-xl 
  transition-all duration-300 animated-image opacity-0 translate-y-5`
>
  <img
    src={src}
    alt={alt}
    loading="lazy"
    class={`w-full h-full transition-transform duration-700 group-hover:scale-105 ${className}`}
  />
  <div
    class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/0 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"
  >
    <div class="absolute bottom-0 left-0 right-0 p-4">
      <h3
        class="text-white text-lg md:text-xl lg:text-3xl font-medium transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300"
      >
        {alt}
      </h3>
    </div>
  </div>
</div>

<script>
  const images = document.querySelectorAll(".animated-image");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.remove("opacity-0", "translate-y-5");
          observer.unobserve(entry.target);
        }
      });
    },
    {
      threshold: 0.1,
      rootMargin: "50px",
    }
  );

  images.forEach((image) => {
    observer.observe(image);
  });
</script>
